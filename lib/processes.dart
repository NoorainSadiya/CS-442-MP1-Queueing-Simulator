import 'package:queueing_simulator/util/stats.dart';

/// Base class for all process types.
abstract class Process {
  final String name;

  Process(this.name);

  /// Returns a list of all events generated by this process.
  List<Event> generateEvents();
}

/// An event that occurs once at a fixed time.
class Event {
  final String processName;
  final int arrivalTime;
  final int duration;
  int? startTime;
  int? waitTime;

  Event(this.processName, this.arrivalTime, this.duration,
      {this.startTime, this.waitTime});
}

class SingletonProcess extends Process {
  final int duration;
  final int arrivalTime;
  SingletonProcess(String name, this.arrivalTime, this.duration) : super(name);

  @override
  List<Event> generateEvents() {
    return [Event(name, arrivalTime, duration)];
  }
}

class PeriodicProcess extends Process {
  final int duration;
  final int interarrivalTime;
  final int firstArrival;
  final int numRepetitions;
  PeriodicProcess(String name, this.firstArrival, this.duration,
      this.interarrivalTime, this.numRepetitions)
      : super(name);

  @override
  List<Event> generateEvents() {
    List<Event> events = [];
    for (int i = 0; i < numRepetitions; i++) {
      final arrivalTime = firstArrival + i * interarrivalTime;
      events.add(Event(name, arrivalTime, duration));
    }
    return events;
  }
}

class StochasticProcess extends Process {
  final double meanDuration;
  final double meanInterarrivalTime;
  final int firstArrival;
  final int end;

  StochasticProcess(String name, this.firstArrival, this.meanDuration,
      this.meanInterarrivalTime, this.end)
      : super(name);

  @override
  List<Event> generateEvents() {
    List<Event> events = [];
    int arrivalTime = firstArrival;
    var expDuration = ExpDistribution(mean: meanDuration);
    var expInterarrival = ExpDistribution(mean: meanInterarrivalTime);

    while (arrivalTime < end) {
      final duration = expDuration.next().round();
      events.add(Event(name, arrivalTime, duration));
      arrivalTime += expInterarrival.next().toInt();
    }
    return events;
  }
}
